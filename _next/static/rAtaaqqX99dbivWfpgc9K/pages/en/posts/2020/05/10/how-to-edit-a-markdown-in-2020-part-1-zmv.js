(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{"7ljp":function(e,t,n){"use strict";n.d(t,"a",(function(){return p})),n.d(t,"b",(function(){return f}));var a=n("q1tI"),r=n.n(a);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=r.a.createContext({}),b=function(e){var t=r.a.useContext(s),n=t;return e&&(n="function"===typeof e?e(t):l({},t,{},e)),n},p=function(e){var t=b(e.components);return(r.a.createElement(s.Provider,{value:t},e.children))},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.a.createElement(r.a.Fragment,{},t)}},d=Object(a.forwardRef)((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,i=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),p=b(n),u=a,d=p["".concat(i,".").concat(u)]||p[u]||m[u]||o;return n?r.a.createElement(d,l({ref:t},s,{components:n})):r.a.createElement(d,l({ref:t},s))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"===typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"===typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.a.createElement.apply(null,i)}return r.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},Ff2n:function(e,t,n){"use strict";function a(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}n.d(t,"a",(function(){return a}))},Qetd:function(e,t,n){"use strict";var a=Object.assign.bind(Object);e.exports=a,e.exports.default=e.exports},sScG:function(e,t,n){(window.__NEXT_P=window.__NEXT_P||[]).push(["/en/posts/2020/05/10/how-to-edit-a-markdown-in-2020-part-1-zmv",function(){return n("w70Z")}])},w70Z:function(e,t,n){"use strict";n.r(t),n.d(t,"meta",(function(){return c})),n.d(t,"default",(function(){return p}));var a=n("wx14"),r=n("Ff2n"),o=n("q1tI"),i=n.n(o),l=n("7ljp"),c=(i.a.createElement,{title:"How to edit a markdown in 2020, part 1: zmv",description:"Sorry .mdx but I renamed you.",cover:"https://i.imgur.com/afxmh3O.png"}),s={meta:c},b="wrapper";function p(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(l.b)(b,Object(a.a)({},s,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("p",null,"As you may know, I now use ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://nextjs.org/"}),"Next.js")," to compile my website. It allows me to write my layout and pages in ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://reactjs.org/"}),"React")," and still have the benefit to use static files in the end."),Object(l.b)("p",null,"For my posts, ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://mdxjs.com/"}),"MDX")," was my choice: it's ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://daringfireball.net/projects/markdown/syntax"}),"Markdown")," but with ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://facebook.github.io/jsx/"}),"JSX")," capacity, perfect when you want to display a live version of your code, or to use custom components to inject into your Markdown documents."),Object(l.b)("p",null,"Okay, now that you know more about my stack, let's talk about MDX. If you read the documentation of MDX, the extension of the files used is ",Object(l.b)("inlineCode",{parentName:"p"},".mdx")," by default. It's a good idea to make the difference between markdown documents and mdx documents."),Object(l.b)("p",null,"However, it provokes some issues on different topics."),Object(l.b)("h3",null,"Already existing format"),Object(l.b)("p",null,"First of all, as you can read on ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/.MDX"}),"Wikipedia"),", ",Object(l.b)("inlineCode",{parentName:"p"},".mdx")," already exists as format, and what is it?"),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Media Data Extended files are a binary ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/File_format"}),"file format")," for storing ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/3D_model"}),"3D models"),", engineered and used by ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://en.wikipedia.org/wiki/Blizzard_Entertainment"}),"Blizzard Entertainment")," in its games.")),Object(l.b)("p",null,"Okay fine, but what's the problem? The problem is some editors like ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://www.sublimetext.com/"}),"Sublime Text")," (and plugins) could ignore them by default as ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/SublimeText/AFileIcon/blob/92ca2285588873f6a1aadaf186a9c4f7b23e188f/.sublime/Preferences.sublime-settings#L58"}),"they think it's a binary")," so you won't be able to see them in the sidebar or whatever."),Object(l.b)("h3",null,"Impossible to open on Markdown Editors"),Object(l.b)("p",null,"Second issue, it's not recognised yet by different Markdown editors. Indeed, they only display ",Object(l.b)("inlineCode",{parentName:"p"},".md")," files."),Object(l.b)("h3",null,Object(l.b)("em",{parentName:"h3"},"So what's the solution?")),Object(l.b)("p",null,"The solution is simply to change all the ",Object(l.b)("inlineCode",{parentName:"p"},".mdx")," into ",Object(l.b)("inlineCode",{parentName:"p"},".md"),"."),Object(l.b)("p",null,"(And to be honest, I don't mind because I also do the same for JSX where my files are in ",Object(l.b)("inlineCode",{parentName:"p"},".js")," and not ",Object(l.b)("inlineCode",{parentName:"p"},".jsx"),".)"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"This is the part where zmv comes.")),Object(l.b)("p",null,"What do we want to do? Change all the MDX documents into ",Object(l.b)("inlineCode",{parentName:"p"},".md"),". So what could we use for that? ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://formulae.brew.sh/formula/rename"}),"rename"),"? meh, it needs ",Object(l.b)("inlineCode",{parentName:"p"},"find")," for that. The excellent ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/neurobin/rnm"}),"rnm"),"? Yeah we could but I often need to read the documentation to understand how it works. So, what could we use? ",Object(l.b)("a",Object(a.a)({parentName:"p"},{href:"https://github.com/zsh-users/zsh/blob/master/Functions/Misc/zmv"}),"ZMV")," \ud83d\udcaa\ud83c\udffb"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"zmv")," is a zsh command to rename easily your folders or/and files."),Object(l.b)("p",null,"How could we use it for our goal? Like that:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),'$  zmv -W "**/index.mdx" "**/index.md"\n')),Object(l.b)("p",null,"\ud83d\udca5, the trick is done. Any ",Object(l.b)("inlineCode",{parentName:"p"},"index.mdx")," of any folders are now named ",Object(l.b)("inlineCode",{parentName:"p"},"index.md"),". The API is quite obvious to me, I love it."),Object(l.b)("p",null,"Different ways to use it:"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Using capture"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ zmv '(**/)foo.txt' '${1}bar.txt'\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Using the ",Object(l.b)("inlineCode",{parentName:"p"},"-w")," flag to have each wildcard automatically made into a parenthetical group"),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"zmv -w '**/foo.txt' '${1}bar.txt'\n"))),Object(l.b)("li",{parentName:"ul"},Object(l.b)("p",{parentName:"li"},"Using the ",Object(l.b)("inlineCode",{parentName:"p"},"-W")," flag and use wildcards in the replacement text \u2014 with this flag, the wildcards in the replacement text are turned into ",Object(l.b)("inlineCode",{parentName:"p"},"$1"),", ",Object(l.b)("inlineCode",{parentName:"p"},"$2"),", etc."),Object(l.b)("pre",{parentName:"li"},Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"$ zmv -W '**/foo.txt' '**/bar.txt'\n")))),Object(l.b)("p",null,"To use ",Object(l.b)("inlineCode",{parentName:"p"},"zmv")," , you first need to load it via ",Object(l.b)("inlineCode",{parentName:"p"},"autoload zmv"),". I suggest you to load it into your ",Object(l.b)("inlineCode",{parentName:"p"},".zshrc")," like:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-shell"}),"# ~/.zshrc\nautoload zmv\n")),Object(l.b)("h3",null,"Next.js part"),Object(l.b)("p",null,"Okay we're good, our files are now with the good extension and can be easily opened via different editors. However, we still need to change the way Next.js compile our files."),Object(l.b)("p",null,"It's quite easy, no worries, you simply need to go to ",Object(l.b)("inlineCode",{parentName:"p"},"next.config.js")," and specify the string of the extension like this:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-diff"}),'// next.config.js\nconst withPlugins = require("next-compose-plugins")\nconst withMDX = require("@next/mdx")({\n+ extension: /\\.md$/,\n})\n\nmodule.exports = withPlugins([withMDX], {\n- pageExtensions: ["mdx", "js"],\n+ pageExtensions: ["md", "js"],\n})\n')),Object(l.b)("p",null,"If you still want to keep ",Object(l.b)("inlineCode",{parentName:"p"},".md")," and ",Object(l.b)("inlineCode",{parentName:"p"},".mdx"),", no issues, you can write it like this:"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// next.config.js\nconst withPlugins = require("next-compose-plugins")\nconst withMDX = require("@next/mdx")({\n  extension: /\\.md?$/,\n})\n\nmodule.exports = withPlugins([withMDX], {\n  pageExtensions: ["md", "mdx", "js"],\n})\n')),Object(l.b)("p",null,"(As you can see in this code, I use the excellent pluging next-compose-plugins which allows you to have a better readability of your list of plugins.)"),Object(l.b)("hr",null),Object(l.b)("p",null,"Greaaaaaaaat! Now that we've renamed all our MDX files, we now can open them in any markdown editors! In another post, I'll talk to you about different Markdown Editors I tried or use."),Object(l.b)("p",null,"And if you want some resources about ",Object(l.b)("inlineCode",{parentName:"p"},"zvm"),":"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://filipekiss.com.br/zmv-zsh-rename/"}),"Moving files in ZSH - The wonderful world of zmv")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://stackoverflow.com/questions/35229991/renaming-files-in-subfolders-using-zmv"}),"Renaming files in subfolders using zmv")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://coderwall.com/p/yepegw/mass-renaming-files-with-zmv-zsh"}),"Mass renaming files with zmv (zsh)")),Object(l.b)("li",{parentName:"ul"},Object(l.b)("a",Object(a.a)({parentName:"li"},{href:"https://coderwall.com/p/yepegw/mass-renaming-files-with-zmv-zsh"}),"Renaming Magically With zmv"))),Object(l.b)("p",null,"Bye bye \ud83d\udc4b\ud83c\udffb"))}p.isMDXComponent=!0},wx14:function(e,t,n){"use strict";function a(){return(a=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var a in n)Object.prototype.hasOwnProperty.call(n,a)&&(e[a]=n[a])}return e}).apply(this,arguments)}n.d(t,"a",(function(){return a}))}},[["sScG",0,1]]]);